{"remainingRequest":"/Users/oleksandrmostovyi/GIT/BrainHub/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/oleksandrmostovyi/GIT/BrainHub/src/components/AlgorithmsUI.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/oleksandrmostovyi/GIT/BrainHub/src/components/AlgorithmsUI.vue","mtime":1644773879567},{"path":"/Users/oleksandrmostovyi/GIT/BrainHub/node_modules/cache-loader/dist/cjs.js","mtime":1644762765578},{"path":"/Users/oleksandrmostovyi/GIT/BrainHub/node_modules/babel-loader/lib/index.js","mtime":1644252657160},{"path":"/Users/oleksandrmostovyi/GIT/BrainHub/node_modules/cache-loader/dist/cjs.js","mtime":1644762765578},{"path":"/Users/oleksandrmostovyi/GIT/BrainHub/node_modules/vue-loader/lib/index.js","mtime":1629542525791}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiQWxnb3JpdGhtc1VJIiwKICBkYXRhOiBmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gewogICAgICBjdXJyZW50VGFiOiAiRWFzeU9uZVR3byIsCiAgICAgIC8vIEhhdmUgdG8gY2hhbmdlIGluIG9uIG91ciBnZW5lcmF0ZWQgYXJyYXkKICAgICAgbnVtYmVyQXJyYXk6IFsxLDIsMyw0LDUsNiw3LDgsOSwxMF0sCiAgICAgIC8vIEN1cnJlbnQgdmFsdWUsIG5lZWRlZCBmb3IgcHJvZ3Jlc3MgYmxvY2sKICAgICAgc2VxdWVuY2VOdW1iZXI6IDAsCiAgICAgIC8vIFZhbHVlLCB0aGF0IHdpbGwgYmUgZGlzcGxheWVkIG9uIFVzZXJzIHNjcmVlbgogICAgICBjdXJyZW50VmFsdWU6IG51bGwsCiAgICAgIC8vIFJlcGVhdHMgYW1vdW50IGZyb20gaW5wdXQgZm9ybQogICAgICByZXBlYXRzOiAwLAogICAgICAvLyBTcGVlZCBiZXR3ZWVuIGRpZ2l0cyBkaXNwbGF5aW5nCiAgICAgIHNwZWVkOiAwLAogICAgICAvLyBBbGwgcG9zc2liaWxpdGllcyBmb3IgZWFjaCBibG9jay4gSGF2ZSB0byBiZSBjaGFuZ2VkIGxhdGVyCiAgICAgIHRhYnNFYXN5OiBbIkVhc3lPbmVUd28iLCAiRWFzeU9uZVRocmVlIiwgIkVhc3lPbmVGb3VyIiwgIkVhc3lPbmVGaXZlIiwgIkVhc3lPbmVTaXgiLCAiRWFzeU9uZVNldmVuIiwgIkVhc3lPbmVFaWdodCIsICJFYXN5T25lTmluZSJdLAogICAgICB0YWJzQnJvdGhlcjogWyJCcm90aGVyT25lIiwgIkJyb3RoZXJUd28iLCAiQnJvdGhlclRocmVlIiwgIkJyb3RoZXJGb3VyIl0KICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIEluaXRpYWxpemluZyB0aGlzLm51bWJlckFycmF5IFRPRE8KICAgIGdldE5ld051bWJlcnNBcnJheTogZnVuY3Rpb24oKSB7fSwKCiAgICAvLyBTdGFydGluZyBvdXIgdGltZXIsIGhhcyB0byB1cGRhdGUgdGhpcy5jdXJyZW50VmFsdWUgZWFjaCB0aGlzLnNwZWVkICogMTAwMCBtaWxsaXNlY29uZHMKICAgIHN0YXJ0VGltZXI6IGZ1bmN0aW9uICgpIHsKICAgICAgLy8gTmVlZGVkIGZvciBzZXR0aW5nIG9uIDAsIGlmIHdlIGFyZSBjbGlja2luZyBvbmUgbW9yZSB0aW1lIG9uIEdlbmVyYXRlIEJ1dHRvbiB3aXRob3V0IHBhZ2UgdXBkYXRlCiAgICAgIHRoaXMuc2VxdWVuY2VOdW1iZXIgPSAwOwogICAgICAvLyBpbml0aWFsaXplIGFsbCBjYWxscyByaWdodCBhd2F5CiAgICAgIHRoaXMubnVtYmVyQXJyYXkuZm9yRWFjaCgoKSA9PiB7CiAgICAgICAgY29uc29sZS5sb2codGhpcy5zZXF1ZW5jZU51bWJlcikKICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgICAgIHRoaXMuY3VycmVudFZhbHVlID0gdGhpcy5udW1iZXJBcnJheVt0aGlzLnNlcXVlbmNlTnVtYmVyXTsKICAgICAgICAgICsrdGhpcy5zZXF1ZW5jZU51bWJlcjsKICAgICAgICB9LCB0aGlzLnNwZWVkICogMTAwMCk7CiAgICAgIH0pOwogICAgfSwKICB9Cn0K"},{"version":3,"sources":["AlgorithmsUI.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AlgorithmsUI.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"algorithms-block\">\n    <!-- Choosing block Easy, list of all possible possibilities -->\n    <b-dropdown class=\"mx-1\" variant=\"outline-danger\" right text=\"Просто\">\n      <b-dropdown-item variant=\"primary\" v-for=\"tab in tabsEasy\"\n                       v-bind:key=\"tab\"\n                       v-bind:class=\"['tab-button', { active: currentTab === tab }]\"\n                       v-on:click=\"currentTab = tab\"\n      >{{ tab }}</b-dropdown-item>\n    </b-dropdown>\n    <!-- Choosing block Brother, list of all possible possibilities -->\n    <b-dropdown class=\"mx-1\" variant=\"outline-success\" right text=\"Брат\">\n      <b-dropdown-item variant=\"primary\" v-for=\"tab in tabsBrother\"\n                       v-bind:key=\"tab\"\n                       v-bind:class=\"['tab-button', { active: currentTab === tab }]\"\n                       v-on:click=\"currentTab = tab\"\n      >{{ tab }}</b-dropdown-item>\n    </b-dropdown>\n    <!-- Chosen level and difficulty -->\n    <p>Выбранный режим: {{ currentTab }}</p>\n    <!-- Input fields for repeats amount and speed -->\n    <b-row>\n      <b-col>\n        <b-form-input v-model=\"repeats\" type=\"number\" debounce=\"500\"></b-form-input>\n      </b-col>\n      <b-col>\n        <b-form-input v-model=\"speed\" type=\"number\" step=\"0.1\" debounce=\"500\"></b-form-input>\n      </b-col>\n      <div class=\"w-100\"></div>\n      <b-col>\n        <div class=\"mt-2\">Количество повторений: \"{{ repeats }}\"</div>\n      </b-col>\n      <b-col>\n        <div class=\"mt-2\">Скорость: \"{{ speed }}\" сек</div>\n      </b-col>\n    </b-row>\n    <b-button variant=\"success\" v-on:click=\"startTimer\">Generate values</b-button>\n    <div class=\"generated-value\">\n      <p> {{currentValue}} </p>\n    </div>\n    <!-- Progress -->\n    <b-progress :value=\"sequenceNumber\" :max=\"numberArray.length\" show-progress animated></b-progress>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"AlgorithmsUI\",\n  data: function () {\n    return {\n      currentTab: \"EasyOneTwo\",\n      // Have to change in on our generated array\n      numberArray: [1,2,3,4,5,6,7,8,9,10],\n      // Current value, needed for progress block\n      sequenceNumber: 0,\n      // Value, that will be displayed on Users screen\n      currentValue: null,\n      // Repeats amount from input form\n      repeats: 0,\n      // Speed between digits displaying\n      speed: 0,\n      // All possibilities for each block. Have to be changed later\n      tabsEasy: [\"EasyOneTwo\", \"EasyOneThree\", \"EasyOneFour\", \"EasyOneFive\", \"EasyOneSix\", \"EasyOneSeven\", \"EasyOneEight\", \"EasyOneNine\"],\n      tabsBrother: [\"BrotherOne\", \"BrotherTwo\", \"BrotherThree\", \"BrotherFour\"]\n    }\n  },\n  methods: {\n    // Initializing this.numberArray TODO\n    getNewNumbersArray: function() {},\n\n    // Starting our timer, has to update this.currentValue each this.speed * 1000 milliseconds\n    startTimer: function () {\n      // Needed for setting on 0, if we are clicking one more time on Generate Button without page update\n      this.sequenceNumber = 0;\n      // initialize all calls right away\n      this.numberArray.forEach(() => {\n        console.log(this.sequenceNumber)\n        setTimeout(() => {\n          this.currentValue = this.numberArray[this.sequenceNumber];\n          ++this.sequenceNumber;\n        }, this.speed * 1000);\n      });\n    },\n  }\n}\n</script>\n\n<style scoped>\n\n  #algorithms-block {\n    margin: auto;\n    max-width: 80%;\n    max-height: 80%;\n  }\n\n</style>"]}]}