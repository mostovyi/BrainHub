{"remainingRequest":"/Users/oleksandrmostovyi/GIT/BrainHub/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/oleksandrmostovyi/GIT/BrainHub/src/components/BrotherOne.vue?vue&type=style&index=0&id=43a740b6&scoped=true&lang=css&","dependencies":[{"path":"/Users/oleksandrmostovyi/GIT/BrainHub/src/components/BrotherOne.vue","mtime":1644337886363},{"path":"/Users/oleksandrmostovyi/GIT/BrainHub/node_modules/css-loader/dist/cjs.js","mtime":1629542514662},{"path":"/Users/oleksandrmostovyi/GIT/BrainHub/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1629542525791},{"path":"/Users/oleksandrmostovyi/GIT/BrainHub/node_modules/postcss-loader/src/index.js","mtime":1629542515023},{"path":"/Users/oleksandrmostovyi/GIT/BrainHub/node_modules/cache-loader/dist/cjs.js","mtime":1644252659493},{"path":"/Users/oleksandrmostovyi/GIT/BrainHub/node_modules/vue-loader/lib/index.js","mtime":1629542525791}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKYnV0dG9uIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiBibHVlOyAvKiBHcmVlbiAqLwogIGJvcmRlcjogbm9uZTsKICBjb2xvcjogd2hpdGU7CiAgcGFkZGluZzogMTVweCAzMnB4OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICB0ZXh0LWRlY29yYXRpb246IG5vbmU7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIGZvbnQtc2l6ZTogMTZweDsKfQo="},{"version":3,"sources":["BrotherOne.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BrotherOne.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div>\n      <button @click=\"getNewNumbersArray( repeats )\">Result is: {{ answer }}</button>\n    </div>\n    <div>\n      <div class=\"numbers-block\" v-for=\"(element, i) in array\" :key=\" 'A'+ i\">{{ element }} </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: \"BrotherOne\",\n  data: function () {\n    return {\n      array: [],\n      answer: 0\n    }\n  },\n  // Input parameters\n  props: {\n    repeats : Number\n  },\n  // Digits generation function\n  methods: {\n    getNewNumbersArray : function (repeats) {\n      console.log(\"BrotherOne\");\n\n      let help = [];\n      let helpAnswer = 0;\n      let currentValue = 0;\n      for(let i = 0; i < repeats; i++){\n\n        switch (helpAnswer) {\n\n          case 0: {\n            currentValue = this.getRandomIntInclusive(1, 9);\n            help.push(currentValue);\n            helpAnswer += currentValue;\n            break;\n          }\n          case 1: {\n            let list1 = [-1, 1, 2, 3, 4, 5, 6, 7, 8];\n            currentValue = this.getRandomIntInclusive(0, 8);\n            currentValue = list1[currentValue];\n            help.push(currentValue);\n            helpAnswer += currentValue;\n            break;\n          }\n          case 2: {\n            let list2 = [-2, -1, 1, 2, 3, 4, 5, 6, 7];\n            currentValue = this.getRandomIntInclusive(0, 8);\n            currentValue = list2[currentValue];\n            help.push(currentValue);\n            helpAnswer += currentValue;\n            break;\n          }\n          case 3: {\n            let list3 = [-3, -2, -1, 1, 2, 3, 4, 5, 6];\n            currentValue = this.getRandomIntInclusive(0, 8);\n            currentValue = list3[currentValue];\n            help.push(currentValue);\n            helpAnswer += currentValue;\n            break;\n          }\n          case 4: {\n            let list4 = [-4, -3, -2, -1, 1, 2, 3, 4, 5];\n            currentValue = this.getRandomIntInclusive(0, 8);\n            currentValue = list4[currentValue];\n            help.push(currentValue);\n            helpAnswer += currentValue;\n            break;\n          }\n          case 5: {\n            let list5 = [-5, -4, -3, -2, -1, 1, 2, 3, 4];\n            currentValue = this.getRandomIntInclusive(0, 8);\n            currentValue = list5[currentValue];\n            help.push(currentValue);\n            helpAnswer += currentValue;\n            break;\n          }\n          case 6: {\n            let list6 = [-6, -5, -4, -3, -2, -1, 1, 2, 3];\n            currentValue = this.getRandomIntInclusive(0, 8);\n            currentValue = list6[currentValue];\n            help.push(currentValue);\n            helpAnswer += currentValue;\n            break;\n          }\n          case 7: {\n            let list7 = [-7, -6, -5, -4, -3, -2, -1, 1, 2];\n            currentValue = this.getRandomIntInclusive(0, 8);\n            currentValue = list7[currentValue];\n            help.push(currentValue);\n            helpAnswer += currentValue;\n            break;\n          }\n          case 8: {\n            let list8 = [-8, -7, -6, -5, -4, -3, -2, -1, 1];\n            currentValue = this.getRandomIntInclusive(0, 8);\n            currentValue = list8[currentValue];\n            help.push(currentValue);\n            helpAnswer += currentValue;\n            break;\n          }\n          case 9: {\n            let list9 = [-9, -8, -7, -6, -5, -4, -3, -2, -1];\n            currentValue = this.getRandomIntInclusive(0, 8);\n            currentValue = list9[currentValue];\n            help.push(currentValue);\n            helpAnswer += currentValue;\n            break;\n          }\n        }\n      }\n\n      this.array = help;\n      this.answer = helpAnswer;\n    },\n    // Generates random values\n    getRandomIntInclusive : function (min, max) {\n      min = Math.ceil(min);\n      max = Math.floor(max);\n      return Math.floor(Math.random() * (max - min + 1)) + min; //Максимум и минимум включаются\n    }\n  }\n}\n</script>\n\n<style scoped>\nbutton {\n  background-color: blue; /* Green */\n  border: none;\n  color: white;\n  padding: 15px 32px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n}\n</style>"]}]}