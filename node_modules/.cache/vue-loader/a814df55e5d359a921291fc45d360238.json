{"remainingRequest":"/Users/oleksandrmostovyi/GIT/BrainHub/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/oleksandrmostovyi/GIT/BrainHub/src/components/EasyOneTwo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/oleksandrmostovyi/GIT/BrainHub/src/components/EasyOneTwo.vue","mtime":1644321968568},{"path":"/Users/oleksandrmostovyi/GIT/BrainHub/node_modules/cache-loader/dist/cjs.js","mtime":1644252659493},{"path":"/Users/oleksandrmostovyi/GIT/BrainHub/node_modules/babel-loader/lib/index.js","mtime":1644252657160},{"path":"/Users/oleksandrmostovyi/GIT/BrainHub/node_modules/cache-loader/dist/cjs.js","mtime":1644252659493},{"path":"/Users/oleksandrmostovyi/GIT/BrainHub/node_modules/vue-loader/lib/index.js","mtime":1629542525791}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgovLyBGb3Igbm93IHRoaXMgZnVuY3Rpb24gd29ya3MsIGJ1dCBpbnB1dCBwYXJhbWV0ZXJzIGFyZSBoYXJkY29kZWQKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJFYXN5T25lVHdvIiwKICBkYXRhOiBmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gewogICAgICBhcnJheTogW10sCiAgICAgIGFuc3dlcjogMAogICAgfQogIH0sCiAgLy8gSW5wdXQgcGFyYW1ldGVycwogIHByb3BzOiB7CiAgICByZXBlYXRzIDogTnVtYmVyCiAgfSwKICAvLyBEaWdpdHMgZ2VuZXJhdGlvbiBmdW5jdGlvbgogIG1ldGhvZHM6IHsKICAgIGdldE5ld051bWJlcnNBcnJheSA6IGZ1bmN0aW9uIChyZXBlYXRzKSB7CiAgICAgIGNvbnNvbGUubG9nKCJFYXN5T25lVHdvIikKICAgICAgbGV0IGhlbHAgPSBbXTsKICAgICAgbGV0IGhlbHBBbnN3ZXIgPSAwOwogICAgICBsZXQgY3VycmVudFZhbHVlID0gMDsKICAgICAgZm9yKGxldCBpID0gMDsgaSA8IHJlcGVhdHM7IGkrKyl7CgogICAgICAgIHN3aXRjaCAoaGVscEFuc3dlcikgewogICAgICAgICAgICAvLyBJZiBjdXJyZW50IHN0ZXAgaXMgZXF1YWxzIHRvIFplcm8sIHdlIG1ha2UgZm9sbG93aW5nCiAgICAgICAgICBjYXNlIDA6IHsKICAgICAgICAgICAgY3VycmVudFZhbHVlID0gdGhpcy5nZXRSYW5kb21JbnRJbmNsdXNpdmUoMSwgMik7CiAgICAgICAgICAgIGhlbHAucHVzaChjdXJyZW50VmFsdWUpOwogICAgICAgICAgICBoZWxwQW5zd2VyICs9IGN1cnJlbnRWYWx1ZTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICB9CiAgICAgICAgICAgIC8vIElmIGN1cnJlbnQgc3RlcCBpcyBlcXVhbHMgdG8gT25lLCB3ZSBtYWtlIGZvbGxvd2luZwogICAgICAgICAgY2FzZSAxOiB7CiAgICAgICAgICAgIGxldCBsaXN0MSA9IFsxLC0xLCAyXTsKICAgICAgICAgICAgY3VycmVudFZhbHVlID0gdGhpcy5nZXRSYW5kb21JbnRJbmNsdXNpdmUoMCwgMik7CiAgICAgICAgICAgIGN1cnJlbnRWYWx1ZSA9IGxpc3QxW2N1cnJlbnRWYWx1ZV07CiAgICAgICAgICAgIGhlbHAucHVzaChjdXJyZW50VmFsdWUpOwogICAgICAgICAgICBoZWxwQW5zd2VyICs9IGN1cnJlbnRWYWx1ZTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICB9CiAgICAgICAgICAgIC8vIElmIGN1cnJlbnQgc3RlcCBpcyBlcXVhbHMgdG8gVHdvLCB3ZSBtYWtlIGZvbGxvd2luZwogICAgICAgICAgY2FzZSAyOiB7CiAgICAgICAgICAgIGxldCBsaXN0MiA9IFstMiwtMSwgMSwgMl07CiAgICAgICAgICAgIGN1cnJlbnRWYWx1ZSA9IHRoaXMuZ2V0UmFuZG9tSW50SW5jbHVzaXZlKDAsIDMpOwogICAgICAgICAgICBjdXJyZW50VmFsdWUgPSBsaXN0MltjdXJyZW50VmFsdWVdOwogICAgICAgICAgICBoZWxwLnB1c2goY3VycmVudFZhbHVlKTsKICAgICAgICAgICAgaGVscEFuc3dlciArPSBjdXJyZW50VmFsdWU7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgfQogICAgICAgICAgICAvLyBJZiBjdXJyZW50IHN0ZXAgaXMgZXF1YWxzIHRvIFRocmVlLCB3ZSBtYWtlIGZvbGxvd2luZwogICAgICAgICAgY2FzZSAzOiB7CiAgICAgICAgICAgIGxldCBsaXN0MyA9IFstMiwtMSwgMV07CiAgICAgICAgICAgIGN1cnJlbnRWYWx1ZSA9IHRoaXMuZ2V0UmFuZG9tSW50SW5jbHVzaXZlKDAsIDIpOwogICAgICAgICAgICBjdXJyZW50VmFsdWUgPSBsaXN0M1tjdXJyZW50VmFsdWVdOwogICAgICAgICAgICBoZWxwLnB1c2goY3VycmVudFZhbHVlKTsKICAgICAgICAgICAgaGVscEFuc3dlciArPSBjdXJyZW50VmFsdWU7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgfQogICAgICAgICAgICAvLyBJZiBjdXJyZW50IHN0ZXAgaXMgZXF1YWxzIHRvIEZvdXIsIHdlIG1ha2UgZm9sbG93aW5nCiAgICAgICAgICBjYXNlIDQ6IHsKICAgICAgICAgICAgbGV0IGxpc3Q0ID0gWy0yLC0xXTsKICAgICAgICAgICAgY3VycmVudFZhbHVlID0gdGhpcy5nZXRSYW5kb21JbnRJbmNsdXNpdmUoMCwgMSk7CiAgICAgICAgICAgIGN1cnJlbnRWYWx1ZSA9IGxpc3Q0W2N1cnJlbnRWYWx1ZV07CiAgICAgICAgICAgIGhlbHAucHVzaChjdXJyZW50VmFsdWUpOwogICAgICAgICAgICBoZWxwQW5zd2VyICs9IGN1cnJlbnRWYWx1ZTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICAgIHRoaXMuYXJyYXkgPSBoZWxwOwogICAgICB0aGlzLmFuc3dlciA9IGhlbHBBbnN3ZXI7CiAgICB9LAogICAgLy8gR2VuZXJhdGVzIHJhbmRvbSB2YWx1ZXMKICAgIGdldFJhbmRvbUludEluY2x1c2l2ZSA6IGZ1bmN0aW9uIChtaW4sIG1heCkgewogICAgICBtaW4gPSBNYXRoLmNlaWwobWluKTsKICAgICAgbWF4ID0gTWF0aC5mbG9vcihtYXgpOwogICAgICByZXR1cm4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKG1heCAtIG1pbiArIDEpKSArIG1pbjsgLy/QnNCw0LrRgdC40LzRg9C8INC4INC80LjQvdC40LzRg9C8INCy0LrQu9GO0YfQsNGO0YLRgdGPCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["EasyOneTwo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EasyOneTwo.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div>\n      <button @click=\"getNewNumbersArray( repeats )\">Result is: {{ answer }}</button>\n    </div>\n    <div>\n      <div v-for=\"(element, i) in array\" :key=\" 'A'+ i\">{{ element }} </div>\n    </div>\n  </div>\n</template>\n\n\n<script>\n\n// For now this function works, but input parameters are hardcoded\nexport default {\n  name: \"EasyOneTwo\",\n  data: function () {\n    return {\n      array: [],\n      answer: 0\n    }\n  },\n  // Input parameters\n  props: {\n    repeats : Number\n  },\n  // Digits generation function\n  methods: {\n    getNewNumbersArray : function (repeats) {\n      console.log(\"EasyOneTwo\")\n      let help = [];\n      let helpAnswer = 0;\n      let currentValue = 0;\n      for(let i = 0; i < repeats; i++){\n\n        switch (helpAnswer) {\n            // If current step is equals to Zero, we make following\n          case 0: {\n            currentValue = this.getRandomIntInclusive(1, 2);\n            help.push(currentValue);\n            helpAnswer += currentValue;\n            break;\n          }\n            // If current step is equals to One, we make following\n          case 1: {\n            let list1 = [1,-1, 2];\n            currentValue = this.getRandomIntInclusive(0, 2);\n            currentValue = list1[currentValue];\n            help.push(currentValue);\n            helpAnswer += currentValue;\n            break;\n          }\n            // If current step is equals to Two, we make following\n          case 2: {\n            let list2 = [-2,-1, 1, 2];\n            currentValue = this.getRandomIntInclusive(0, 3);\n            currentValue = list2[currentValue];\n            help.push(currentValue);\n            helpAnswer += currentValue;\n            break;\n          }\n            // If current step is equals to Three, we make following\n          case 3: {\n            let list3 = [-2,-1, 1];\n            currentValue = this.getRandomIntInclusive(0, 2);\n            currentValue = list3[currentValue];\n            help.push(currentValue);\n            helpAnswer += currentValue;\n            break;\n          }\n            // If current step is equals to Four, we make following\n          case 4: {\n            let list4 = [-2,-1];\n            currentValue = this.getRandomIntInclusive(0, 1);\n            currentValue = list4[currentValue];\n            help.push(currentValue);\n            helpAnswer += currentValue;\n            break;\n          }\n        }\n      }\n      this.array = help;\n      this.answer = helpAnswer;\n    },\n    // Generates random values\n    getRandomIntInclusive : function (min, max) {\n      min = Math.ceil(min);\n      max = Math.floor(max);\n      return Math.floor(Math.random() * (max - min + 1)) + min; //Максимум и минимум включаются\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]}]}